
(bye)











(de l_section (NAME CODE))
(put 'l_section 'template '((t "section ")(ch 1)(t "\n")(ch 2)))
(l_section 
			

'(the simplest option would be to save the template data in attributes:
(put 'and 'template '(1 " and " 2))
but...)

'(are pieces classes or pairs?)

(de tt (X)
	(let V (cdr X)
		(println (car X) V)
		(case (car X)
			('t 'V)
			('ch (tt V))
			('nl "\n")
			(T V)
		)
	)
)


(de repr(N)
(if (get 'X 'repr)
		(mapcar ((I
		(


(class +Node)



items....how much do i want to keep plain text representation usable? should text still be a string and get special handling? or do i depend on the editor fully?

no markup: you have a list processing language, ..


(class +Piece)

(class +Text +Piece)
(T (V)(=: v V))
(dm repr> ()
	('(: v))


	
(assertz '(representation (and '(1 "and" 2))))

(de representation(N)
	(let (R R)
		(pilog (list(list 'representation N '@X))
			(setq R @X)
		)
	)
)
tt
ft




(assertz '(has_class (








......

(l0)
(setq l1 l0)
(loop)


(require :update)
(assertz '(repr require ((t "
 
(system.update:install-allegrograph)
 
 
(repr (node)) or (docs (node))
 
 
 
 
 
(menu loop)
 
 
....

vsechno lemon (vs specialni handlovani lispu a lemonu)
-> (de to_lemon (N),,,

list x object?

(l (metadata) (and 1 2))

and:
	(1 "and" 2)
	(1 "and" 2 "and" 3)



