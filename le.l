'(put the whole program into a variable l0, so we can access it later and edit it as l1 in the ide)



(setq (l0 '(

'(the simplest option would be to save the representation data in attributes:
(put 'and 'repr '(1 " and " 2))
but...)


(class +Node)



items....how much do i want to keep plain text representation usable? should text still be a string and get special handling? or do i depend on the editor fully?

no markup: you have a list processing language, ..


(class +Piece)

(class +Text +Piece)
(T (V)(=: v V))
(dm repr> ()
	('(: v))


	
(assertz '(representation (and '(1 "and" 2))))

(de representation(N)
	(let (R R)
		(pilog (list(list 'representation N '@X))
			(setq R @X)
		)
	)
)

(de text_representation(N)
	(mapcar ((I)( (representation N)
		(

tt
ft




(assertz '(has_class (








......

(l0)
(setq l1 l0)
(loop)


(require :update)
(assertz '(repr require ((t "
 
(system.update:install-allegrograph)
 
 
 
 
 
(repr (node)) or (docs (node))
 
 
 
 
 
(menu loop)
